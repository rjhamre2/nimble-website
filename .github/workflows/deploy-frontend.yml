name: Deploy Frontend

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: build
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      # --- 1. Continuous Integration (CI) / Build Phase ---

      - name: 🛠️ Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🏗️ Build Static Assets
        # IMPORTANT: This sets the environment variable BUILD_DIR for subsequent steps
        run: npm run build
        env:
          CI: false
          BUILD_DIR: build # The folder containing the final static files
          REACT_APP_GOOGLE_CLIENT_ID: "919316988485-au1an6s2v1j3sfh9n163ehb728hkd661.apps.googleusercontent.com""

      # --- 2. Continuous Delivery (CD) to AWS ---

      - name: 🔐 Configure AWS Credentials
        # This action uses OIDC authentication (id-token: write)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_FRONTEND_DEPLOY_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: 🔎 Verify AWS identity
        run: |
          aws sts get-caller-identity
          aws s3 ls s3://${{ vars.S3_BUCKET_NAME }} || true

      - name: 🚀 Deploy to S3 (Sync build files)
        run: |
          aws s3 sync "${BUILD_DIR}/" "s3://${{ vars.S3_BUCKET_NAME }}/" \
            --follow-symlinks --delete --cache-control max-age=86400

      - name: 💨 Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}" \
            --paths "/*"