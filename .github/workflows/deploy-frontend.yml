name: Deploy Frontend

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: build
    steps:
      - name: ‚¨áÔ∏è Checkout Code
        uses: actions/checkout@v4

      # --- 1. Continuous Integration (CI) / Build Phase ---

      - name: üõ†Ô∏è Setup Node.js Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: üì¶ Install Dependencies
        run: npm ci

      - name: üèóÔ∏è Build Static Assets
        # IMPORTANT: This sets the environment variable BUILD_DIR for subsequent steps
        run: npm run build
        env:
          CI: false
          BUILD_DIR: build # The folder containing the final static files
          REACT_APP_GOOGLE_CLIENT_ID: "919316988485-au1an6s2v1j3sfh9n163ehb728hkd661.apps.googleusercontent.com"
          REACT_APP_DASHBOARD2EC2LAMBDA_BASE_URL: "https://ody56t5fxdrceaqfxnfph2u3j40pamar.lambda-url.ap-south-1.on.aws"
          REACT_APP_AUTH_LAMBDA_BASE_URL: "https://api.nimbleai.in/api/auth"
          REACT_APP_WA_ES_LAMBDA: "https://ozpmzjnghswkf5fzen5rqle7p40wnxrk.lambda-url.ap-south-1.on.aws"
          REACT_APP_FRONTEND2FIREBASE: "https://api.nimbleai.in/api/business"
          REACT_APP_PRICING_LAMBDA: "https://api.nimbleai.in/api/pricing"
          REACT_APP_WEBSOCKET_API_GATEWAY: "wss://s687z96fob.execute-api.ap-south-1.amazonaws.com/prod"
          REACT_APP_RP_ID: "rzp_live_RWPVPdgjJN0s7P"
      # --- 2. Continuous Delivery (CD) to AWS ---

      - name: üîê Configure AWS Credentials
        # This action uses OIDC authentication (id-token: write)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_FRONTEND_DEPLOY_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: üîé Verify AWS identity
        run: |
          aws sts get-caller-identity
          aws s3 ls s3://${{ vars.S3_BUCKET_NAME }} || true

      - name: üöÄ Deploy to S3 (Sync build files)
        run: |
          aws s3 sync "${BUILD_DIR}/" "s3://${{ vars.S3_BUCKET_NAME }}/" \
            --follow-symlinks --delete --cache-control max-age=86400

      - name: üí® Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${{ vars.CLOUDFRONT_DISTRIBUTION_ID }}" \
            --paths "/*"

      - name: üìß Send Success Notification
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚úÖ Frontend Deployment Successful - NimbleAI"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            üéâ Frontend deployment completed successfully!
            
            üìä Deployment Details:
            ‚Ä¢ Repository: ${{ github.repository }}
            ‚Ä¢ Branch: ${{ github.ref_name }}
            ‚Ä¢ Commit: ${{ github.sha }}
            ‚Ä¢ Author: ${{ github.actor }}
            ‚Ä¢ Timestamp: ${{ github.event.head_commit.timestamp }}
            ‚Ä¢ Workflow: ${{ github.workflow }}
            ‚Ä¢ Run ID: ${{ github.run_id }}
            
            üöÄ Deployment Actions:
            ‚Ä¢ ‚úÖ Code checkout completed
            ‚Ä¢ ‚úÖ Dependencies installed
            ‚Ä¢ ‚úÖ Static assets built
            ‚Ä¢ ‚úÖ AWS credentials configured
            ‚Ä¢ ‚úÖ Files synced to S3 bucket: ${{ vars.S3_BUCKET_NAME }}
            ‚Ä¢ ‚úÖ CloudFront cache invalidated
            
            üîó View the deployment: https://${{ vars.S3_BUCKET_NAME }}.s3-website.${{ vars.AWS_REGION }}.amazonaws.com
            
            Best regards,
            NimbleAI Deployment Bot ü§ñ

      - name: üìß Send Failure Notification
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: "‚ùå Frontend Deployment Failed - NimbleAI"
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: ${{ secrets.EMAIL_USERNAME }}
          body: |
            üö® Frontend deployment failed!
            
            üìä Deployment Details:
            ‚Ä¢ Repository: ${{ github.repository }}
            ‚Ä¢ Branch: ${{ github.ref_name }}
            ‚Ä¢ Commit: ${{ github.sha }}
            ‚Ä¢ Author: ${{ github.actor }}
            ‚Ä¢ Timestamp: ${{ github.event.head_commit.timestamp }}
            ‚Ä¢ Workflow: ${{ github.workflow }}
            ‚Ä¢ Run ID: ${{ github.run_id }}
            
            üîç Please check the GitHub Actions logs for more details:
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            ‚ö†Ô∏è Common failure reasons:
            ‚Ä¢ Build errors in the React application
            ‚Ä¢ AWS credentials or permissions issues
            ‚Ä¢ S3 bucket access problems
            ‚Ä¢ CloudFront distribution issues
            ‚Ä¢ Environment variable misconfigurations
            
            Best regards,
            NimbleAI Deployment Bot ü§ñ